{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "CategoriaConnection": "server=localhost; database=categoriaDb; user=root;password=root"

  },
  "Serilog": {
    "Enrich": [ "FromLogContext", "WithExceptionDetails" ], //-> enriquecido com contexto da aplicação.
    "MinimumLevel": "Information",
    "WriteTo": [
      {
        "Name": "Async",//-> utilizar de forma assíncrona 
        "Args": {
          "configure": [
            { "Name": "Console" },//-> escrevendo na console
            {
              "Name": "File",//-> escrevendo no arquivo (salvando na pasta)
              "Args": {
                "path": "log.txt", //-> tipo de arquivo
                "formater": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact",
                "fileSizeLimitBytes": "100000", //-> quando chega ao limite, apaga logs antigos para das espaço a logs novos
                "rollOnFileSizeLimit:": "true", //-> cria novos arquivos assim que o limite for atingido, assim os logs antigos não são apagados.
                "rollingInterval": "Day" //-> intervalo de arquivo, renovado de acordo com a escolha (nesse caso dia) independente se não alcançou os 100kb
              }
            }
          ]
        }
      }
    ]
  }
}













                ////fileSizeLimitBytes: 100000, //-> quando chega ao limite, apaga logs antigos para das espaço a logs novos
                ////rollOnFileSizeLimit : true, //-> cria novos arquivos assim que o limite for atingido, assim os logs antigos não são apagados.
                ////rollingInterval :RollingInterval.Day) //-> intervalo de arquivo, renovado de acordo com a escolha (nesse caso dia) independente se não alcançou os 100kb
                //.WriteTo.Async(p=> p.File("log.txt",fileSizeLimitBytes: 100000, rollOnFileSizeLimit: true, rollingInterval: RollingInterval.Day))
              
                